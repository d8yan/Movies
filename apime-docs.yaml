openapi: 3.0.0
info:
  title: APIMe!
  contact: {}
  version: '1.0'
servers:
- url: http://localhost:3500/apime
- url: http://YOUR_IP_HERE:3500/apime
  variables: {}
paths:
  /user/userCheck:
    get:
      security:
        - cookieAuth: []
      tags:
      - Auth
      summary: Get Current User
      operationId: GetCurrentUser
      parameters: []
      responses:
        '200':
          description: 'Success Response'
          headers: {}
          content:
            application/json:
              schema:
                properties:
                  user:
                    type: object
                    properties:
                      id:
                        type: string
                      username:
                        type: string
                      role:
                        type: string
                example:
                  success:  true
                  user:
                    id: userId
                    username: Admin
                    role: Administrator
        '401':
          description: 'Unauthenticated'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Response-Object'
                - type: object
                  example:
                    success:  false
                    msg:  Unauthenticated Error Message
        '500':
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Response-Object'
                - type: object
                  example:
                    success:  false
                    msg:  Internal Server Error
      deprecated: false
  /user/logout:
    get:
      tags:
      - Auth
      summary: Logout - User
      operationId: Logout-User
      parameters: []
      responses:
        '200':
          description: 'Success Response'
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Response-Object'
                - type: object
                  example:
                    success:  true
                    msg:  Logout successful
        '500':
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Response-Object'
                - type: object
                  example:
                    success:  false
                    msg:  Internal Server Error
      deprecated: false
      security: []
  /user/login:
    post:
      tags:
      - Auth
      summary: Login - User
      operationId: Login-User
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/Login-UserRequest'
              - example:
                  username: Admin
                  password: testpass
            example:
              username: Admin
              password: testpass
        required: true
      responses:
        '200':
          description: 'Success Response'
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Response-Object'
                - type: object
                  properties:
                    user:
                      type: object
                      properties:
                        id:
                          type: string
                        username:
                          type: string
                        role:
                          type: string
                    jwt:
                      type: string
                  example:
                    success:  true
                    msg:  Login successful
                    user:
                      id: userId
                      username: Admin
                      role: Administrator
                    jwt:  tokenValue
        '400':
          description: 'Bad Request'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Response-Object'
                - type: object
                  example:
                    success:  false
                    msg:  Bad Request Error Message
        '500':
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Response-Object'
                - type: object
                  example:
                    success:  false
                    msg:  Internal Server Error
      deprecated: false
      security: []
  /user/register:
    post:
      tags:
      - Auth
      summary: Register - User
      operationId: Register
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/RegisterRequest'
              - example:
                  username: DemoUser1
                  password: testpass
            example:
              username: DemoUser1
              password: testpass
        required: true
      responses:
        '201':
          description: 'Success Response'
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Response-Object'
                - type: object
                  example:
                    success:  true
                    msg:  User created
        '400':
          description: 'Bad Request'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Response-Object'
                - type: object
                  example:
                    success:  false
                    msg:  Bad Request Error Message
        '500':
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Response-Object'
                - type: object
                  example:
                    success:  false
                    msg:  Internal Server Error
      deprecated: false
      security: []
  /movies:
    get:
      security:
        - cookieAuth: []
      tags:
      - Movie
      summary: Get All Movies
      operationId: GetAllMovies
      parameters:
        - in: query
          name: title
          schema:
            type: string
          description: The title of the movie
        - in: query
          name: sort
          schema:
            type: string
          description: Movie sort accepted values; yearReleased, title
        - in: query
          name: category
          schema:
            type: string
          description: Movie category accepted values; Action, Adventure, Drama, Fantasy, Horror, Mystery, Romance, Sci-fi, Thriller
        - in: query
          name: page
          schema:
            type: integer
          description: The page number of the query result. Default is 1 if no value entered
        - in: query
          name: count
          schema:
            type: integer
          description: The movie count per page. Default is 9 if no value entered
      responses:
        '200':
          description: 'Success Response'
          headers: {}
          content:
            application/json:
              schema:
                  properties:
                    success:
                      type: boolean
                    count:
                      type: integer
                    totalCount:
                      type: integer
                    movies:
                      type: array
                      items:
                        properties:
                          _id:
                            type: integer
                          title:
                            type: string
                          image:
                            type: string
                          movieRating:
                            type: number
                          reviewCount:
                            type: integer
                  example:
                    success:  true
                    count:  9
                    totalCount: 100
                    movies:
                      - _id:  6426c03fee802778af273877
                        title:  American Beauty
                        image:  /images/american_beauty.jpg
                        movieRating:  4.6
                        reviewCount:  10
        '401':
          description: 'Unauthenticated'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Response-Object'
                - type: object
                  example:
                    success:  false
                    msg:  Unauthenticated Error Message
        '500':
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Response-Object'
                - type: object
                  example:
                    success:  false
                    msg:  Internal Server Error
      deprecated: false
    post:
      security:
        - cookieAuth: []
      tags:
      - Movie
      summary: Add Movie
      operationId: AddMovie
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/AddMovieRequest'
              - example:
                  title: Hello
                  director: blabla
                  category:
                  - Sci-fi
                  - Fantasy
                  - Action
                  - Horror
                  image: /images/default.jpg
                  description: test description
                  yearReleased: 2024
            example:
              title: Hello
              director: blabla
              category:
              - Sci-fi
              - Fantasy
              - Action
              - Horror
              image: /images/default.jpg
              description: test description
              yearReleased: 2024
        required: true
      responses:
        '201':
          description: 'Success Response'
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Response-Object'
                - type: object
                  example:
                    success:  true
                    msg:  Movie successfully added
        '400':
          description: 'Bad Request'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Response-Object'
                - type: object
                  example:
                    success:  false
                    msg:  Bad Request Error Message
        '401':
          description: 'Unauthenticated'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Response-Object'
                - type: object
                  example:
                    success:  false
                    msg:  Unauthenticated Error Message
        '403':
          description: 'Forbidden'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Response-Object'
                - type: object
                  example:
                    success:  false
                    msg:  Forbidden Error Message
        '500':
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Response-Object'
                - type: object
                  example:
                    success:  false
                    msg:  Internal Server Error
      deprecated: false
  /movies/{id}:
    parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
        description:  The movie ID
    get:
      security:
        - cookieAuth: []
      tags:
      - Movie
      summary: Get SIngle Movie
      operationId: GetSIngleMovie
      parameters: []
      responses:
        '200':
          description: 'Success Response'
          headers: {}
          content:
            application/json:
              schema:
                  properties:
                    success:
                      type: boolean
                    reviewCount:
                      type: integer
                    movie:
                      properties:
                        _id:
                          type: string
                        title:
                          type: string
                        yearReleased:
                          type: integer
                        director:
                          type: string
                        category:
                          type: array
                        image:
                          type: string
                        description:
                          type: string
                        movieRating:
                          type: number
                        reviewCount:
                          type: integer
                    reviews:
                      type: array
                      items:
                        properties:
                          _id:
                            type: string
                          reviewComment:
                            type: string
                          reviewRating:
                            type: integer
                          movie:
                            type: string
                          user:
                            type: object
                            properties:
                              _id:
                                type: string
                              username:
                                type: string
                          createdAt:
                            type: string
                          updatedAt:
                            type: string
                    actors:
                      type: array
                      items:
                        properties:
                          _id:
                            type: string
                          fullName:
                            type: string
                          movieRoles:
                            type: array
                  example:
                    success:  true
                    reviewCount:  10
                    movie:
                      - _id:  6426c03fee802778af273877
                        title:  American Beauty
                        yearReleased: 1999
                        director: Sam Mendes
                        category:
                          - Drama
                          - Fantasy
                        image:  /images/american_beauty.jpg
                        description:  Good Movie
                        movieRating:  4.6
                        reviewCount:  10
                    reviews:
                      - _id:  6426c040ee802778af273930
                        reviewComment:  Good Movie
                        reviewRating: 2
                        movie:  6426c03fee802778af273877
                        user:
                          _id:  6426c040ee802778af2738f4
                          username: User23
                        createdAt:  2023-03-31T11:13:04.383Z
                        updatedAt:  2023-03-31T11:13:04.383Z
                    actors:
                      - _id:  6426c040ee802778af273922
                        fullName: Tom Hanks
                        movieRoles:
                          - Character One
                          - Character Two
        '401':
          description: 'Unauthenticated'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Response-Object'
                - type: object
                  example:
                    success:  false
                    msg:  Unauthenticated Error Message
        '404':
          description: 'Not Found'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Response-Object'
                - type: object
                  example:
                    success:  false
                    msg:  Not Found Error Message
        '500':
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Response-Object'
                - type: object
                  example:
                    success:  false
                    msg:  Internal Server Error
      deprecated: false
    put:
      security:
        - cookieAuth: []
      tags:
      - Movie
      summary: Update Movie
      operationId: UpdateMovie
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/UpdateMovieRequest'
              - example:
                  title: Avatar1235
                  yearReleased: 2009
                  director: James Cameron
                  category:
                  - Sci-fi
                  description: sample description
            example:
              title: Avatar1235
              yearReleased: 2009
              director: James Cameron
              category:
              - Sci-fi
              description: sample description
        required: true
      responses:
        '200':
          description: 'Success Response'
          headers: {}
          content:
            application/json:
              schema:
                  properties:
                    success:
                      type: boolean
                    reviewCount:
                      type: integer
                    movie:
                      properties:
                        _id:
                          type: string
                        title:
                          type: string
                        yearReleased:
                          type: integer
                        director:
                          type: string
                        category:
                          type: array
                        image:
                          type: string
                        description:
                          type: string
                        movieRating:
                          type: number
                        reviewCount:
                          type: integer
                  example:
                    success:  true
                    reviewCount:  10
                    movie:
                      - _id:  6426c03fee802778af273877
                        title:  American Beauty
                        yearReleased: 1999
                        director: Sam Mendes
                        category:
                          - Drama
                          - Fantasy
                        image:  /images/american_beauty.jpg
                        description:  Good Movie
                        movieRating:  4.6
                        reviewCount:  10
        '400':
          description: 'Bad Request'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Response-Object'
                - type: object
                  example:
                    success:  false
                    msg:  Bad Request Error Message
        '401':
          description: 'Unauthenticated'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Response-Object'
                - type: object
                  example:
                    success:  false
                    msg:  Unauthenticated Error Message
        '403':
          description: 'Forbidden'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Response-Object'
                - type: object
                  example:
                    success:  false
                    msg:  Forbidden Error Message
        '404':
          description: 'Not Found'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Response-Object'
                - type: object
                  example:
                    success:  false
                    msg:  Not Found Error Message
        '500':
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Response-Object'
                - type: object
                  example:
                    success:  false
                    msg:  Internal Server Error
      deprecated: false
    delete:
      security:
        - cookieAuth: []
      tags:
      - Movie
      summary: Delete Movie
      operationId: DeleteMovie
      parameters: []
      responses:
        '200':
          description: 'Success Response'
          headers: {}
          content:
            application/json:
              schema:
                  properties:
                    success:
                      type: boolean
                    message:
                      type: string
                    imageFileStatus:
                      type: string
                  example:
                    success:  true
                    message:  Movie deleted
                    imageFileStatus:  Movie Image deleted
        '401':
          description: 'Unauthenticated'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Response-Object'
                - type: object
                  example:
                    success:  false
                    msg:  Unauthenticated Error Message
        '403':
          description: 'Forbidden'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Response-Object'
                - type: object
                  example:
                    success:  false
                    msg:  Forbidden Error Message
        '404':
          description: 'Not Found'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Response-Object'
                - type: object
                  example:
                    success:  false
                    msg:  Not Found Error Message
        '500':
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Response-Object'
                - type: object
                  example:
                    success:  false
                    msg:  Internal Server Error
      deprecated: false
  /movies/uploadMovieImage:
    post:
      security:
        - cookieAuth: []
      tags:
      - Movie
      summary: Upload Image
      operationId: UploadImage
      parameters: []
      requestBody:
        content:
          multipart/form-data:
            encoding: {}
            schema:
              required:
              - movieImage
              type: object
              properties:
                movieImage:
                  type: string
                  format: binary
        required: false
      responses:
        '201':
          description: 'Success Response'
          headers: {}
          content:
            application/json:
              schema:
                  properties:
                    message:
                      type: string
                    url:
                      type: string
                  example:
                    message:  Image uploaded successfully
                    url:  /images/american_beauty.jpg
        '400':
          description: 'Bad Request'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Response-Object'
                - type: object
                  example:
                    success:  false
                    msg:  Bad Request Error Message
        '401':
          description: 'Unauthenticated'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Response-Object'
                - type: object
                  example:
                    success:  false
                    msg:  Unauthenticated Error Message
        '403':
          description: 'Forbidden'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Response-Object'
                - type: object
                  example:
                    success:  false
                    msg:  Forbidden Error Message
        '500':
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Response-Object'
                - type: object
                  example:
                    success:  false
                    msg:  Internal Server Error
      deprecated: false
  /reviews:
    get:
      security:
        - cookieAuth: []
      tags:
      - Review
      summary: Get All Reviews
      operationId: GetAllReviews
      parameters: []
      responses:
        '200':
          description: 'Success Response'
          headers: {}
          content:
            application/json:
              schema:
                  properties:
                    success:
                      type: boolean
                    total:
                      type: integer
                    reviews:
                      type: array
                      items:
                        properties:
                          _id:
                            type: string
                          reviewComment:
                            type: string
                          reviewRating:
                            type: integer
                          movie:
                            type: object
                            properties:
                              _id:
                                type: string
                              title:
                                type: string
                          user:
                            type: object
                            properties:
                              _id:
                                type: string
                              username:
                                type: string
                          createdAt:
                            type: string
                          updatedAt:
                            type: string
                  example:
                    success:  true
                    total:  1000
                    reviews:
                      - _id:  6426c040ee802778af273928
                        reviewComment:  Bad Movie
                        reviewRating: 4
                        movie:
                          _id:  6426c03fee802778af27382a
                          title:  Avatar
                        user:
                          _id:  6426c040ee802778af2738f3
                          username: User12
                        createdAt:  2023-03-31T11:13:04.383Z
                        updatedAt:  2023-03-31T11:13:04.383Z
        '401':
          description: 'Unauthenticated'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Response-Object'
                - type: object
                  example:
                    success:  false
                    msg:  Unauthenticated Error Message
        '403':
          description: 'Forbidden'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Response-Object'
                - type: object
                  example:
                    success:  false
                    msg:  Forbidden Error Message
        '500':
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Response-Object'
                - type: object
                  example:
                    success:  false
                    msg:  Internal Server Error
      deprecated: false
    post:
      security:
        - cookieAuth: []
      tags:
      - Review
      summary: Add review
      operationId: Addreview
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/AddreviewRequest'
              - example:
                  reviewComment: Demo User Review
                  reviewRating: 5
                  movie: 6421189d30fb8cd0f1d6423b
            example:
              reviewComment: Demo User Review
              reviewRating: 5
              movie: 6421189d30fb8cd0f1d6423b
        required: true
      responses:
        '201':
          description: 'Success Response'
          headers: {}
          content:
            application/json:
              schema:
                  properties:
                    success:
                      type: boolean
                    message:
                      type: string
                    review:
                      type: object
                      properties:
                        _id:
                          type: string
                        reviewComment:
                          type: string
                        reviewRating:
                          type: integer
                        movie:
                          type: string
                        user:
                          type: string
                        createdAt:
                          type: string
                        updatedAt:
                          type: string
                  example:
                    success:  true
                    message:  A new review has been created
                    review:
                      _id:  6426c040ee802778af273928
                      reviewComment:  Stunning visuals and a thought-provoking storyline make Avatar a must
                      reviewRating: 4
                      movie:  6426c03fee802778af27382a
                      user: 6426c040ee802778af2738f3
                      createdAt:  2023-03-31T11:13:04.383Z
                      updatedAt:  2023-03-31T11:13:04.383Z
        '400':
          description: 'Bad Request'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Response-Object'
                - type: object
                  example:
                    success:  false
                    msg:  Bad Request Error Message
        '401':
          description: 'Unauthenticated'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Response-Object'
                - type: object
                  example:
                    success:  false
                    msg:  Unauthenticated Error Message
        '404':
          description: 'Not Found'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Response-Object'
                - type: object
                  example:
                    success:  false
                    msg:  Not Found Error Message
        '500':
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Response-Object'
                - type: object
                  example:
                    success:  false
                    msg:  Internal Server Error
      deprecated: false
  /reviews/{id}:
    parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
        description:  The review ID
    get:
      security:
        - cookieAuth: []
      tags:
      - Review
      summary: Get Review By ID
      operationId: GetReviewByID
      parameters: []
      responses:
        '200':
          description: 'Success Response'
          headers: {}
          content:
            application/json:
              schema:
                  properties:
                    success:
                      type: boolean
                    review:
                      type: object
                      properties:
                        _id:
                          type: string
                        reviewComment:
                          type: string
                        reviewRating:
                          type: integer
                        movie:
                          type: string
                        user:
                          type: string
                        createdAt:
                          type: string
                        updatedAt:
                          type: string
                  example:
                    success:  true
                    review:
                      _id:  6426c040ee802778af273928
                      reviewComment:  Stunning visuals and a thought-provoking storyline make Avatar a must
                      reviewRating: 4
                      movie:  6426c03fee802778af27382a
                      user: 6426c040ee802778af2738f3
                      createdAt:  2023-03-31T11:13:04.383Z
                      updatedAt:  2023-03-31T11:13:04.383Z
        '401':
          description: 'Unauthenticated'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Response-Object'
                - type: object
                  example:
                    success:  false
                    msg:  Unauthenticated Error Message
        '403':
          description: 'Forbidden'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Response-Object'
                - type: object
                  example:
                    success:  false
                    msg:  Forbidden Error Message
        '404':
          description: 'Not Found'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Response-Object'
                - type: object
                  example:
                    success:  false
                    msg:  Not Found Error Message
        '500':
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Response-Object'
                - type: object
                  example:
                    success:  false
                    msg:  Internal Server Error
      deprecated: false
    delete:
      security:
        - cookieAuth: []
      tags:
      - Review
      summary: Delete Review
      operationId: DeleteReview
      parameters: []
      responses:
        '200':
          description: 'Success Response'
          headers: {}
          content:
            application/json:
              schema:
                  properties:
                    success:
                      type: boolean
                    message:
                      type: string
                  example:
                    success:  true
                    message:  Review has been deleted
        '401':
          description: 'Unauthenticated'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Response-Object'
                - type: object
                  example:
                    success:  false
                    msg:  Unauthenticated Error Message
        '403':
          description: 'Forbidden'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Response-Object'
                - type: object
                  example:
                    success:  false
                    msg:  Forbidden Error Message
        '404':
          description: 'Not Found'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Response-Object'
                - type: object
                  example:
                    success:  false
                    msg:  Not Found Error Message
        '500':
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Response-Object'
                - type: object
                  example:
                    success:  false
                    msg:  Internal Server Error
      deprecated: false
    put:
      security:
        - cookieAuth: []
      tags:
      - Review
      summary: Update Review
      operationId: UpdateReview
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/UpdateReviewRequest'
              - example:
                  reviewComment: Demo updated review
                  reviewRating: 3
            example:
              reviewComment: Demo updated review
              reviewRating: 3
        required: true
      responses:
        '200':
          description: 'Success Response'
          headers: {}
          content:
            application/json:
              schema:
                  properties:
                    success:
                      type: boolean
                    message:
                      type: string
                    review:
                      type: object
                      properties:
                        _id:
                          type: string
                        reviewComment:
                          type: string
                        reviewRating:
                          type: integer
                        movie:
                          type: string
                        user:
                          type: string
                        createdAt:
                          type: string
                        updatedAt:
                          type: string
                  example:
                    success:  true
                    message:  Review has been updated
                    review:
                      _id:  6426c040ee802778af273928
                      reviewComment:  Stunning visuals and a thought-provoking storyline make Avatar a must
                      reviewRating: 4
                      movie:  6426c03fee802778af27382a
                      user: 6426c040ee802778af2738f3
                      createdAt:  2023-03-31T11:13:04.383Z
                      updatedAt:  2023-03-31T11:13:04.383Z
        '400':
          description: 'Bad Request'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Response-Object'
                - type: object
                  example:
                    success:  false
                    msg:  Bad Request Error Message
        '401':
          description: 'Unauthenticated'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Response-Object'
                - type: object
                  example:
                    success:  false
                    msg:  Unauthenticated Error Message
        '403':
          description: 'Forbidden'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Response-Object'
                - type: object
                  example:
                    success:  false
                    msg:  Forbidden Error Message
        '404':
          description: 'Not Found'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Response-Object'
                - type: object
                  example:
                    success:  false
                    msg:  Not Found Error Message
        '500':
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Response-Object'
                - type: object
                  example:
                    success:  false
                    msg:  Internal Server Error
      deprecated: false
  /reviews/movie/{title}:
    parameters:
      - in: path
        name: title
        schema:
          type: string
        required: true
        description:  The Movie title
    get:
      security:
        - cookieAuth: []
      tags:
      - Review
      summary: Get Movie Reviews By Title
      operationId: GetMovieReviewsByTitle
      parameters: []
      responses:
        '200':
          description: 'Success Response'
          headers: {}
          content:
            application/json:
              schema:
                  properties:
                    success:
                      type: boolean
                    total:
                      type: integer
                    reviews:
                      type: array
                      items:
                        properties:
                          _id:
                            type: string
                          reviewComment:
                            type: string
                          reviewRating:
                            type: integer
                          movie:
                            type: object
                            properties:
                              _id:
                                type: string
                              title:
                                type: string
                          user:
                            type: object
                            properties:
                              _id:
                                type: string
                              username:
                                type: string
                          createdAt:
                            type: string
                          updatedAt:
                            type: string
                  example:
                    success:  true
                    total:  5
                    reviews:
                      - _id:  6426c040ee802778af273928
                        reviewComment:  Bad Movie
                        reviewRating: 4
                        movie:
                          _id:  6426c03fee802778af27382a
                          title:  Avatar
                        user:
                          _id:  6426c040ee802778af2738f3
                          username: User12
                        createdAt:  2023-03-31T11:13:04.383Z
                        updatedAt:  2023-03-31T11:13:04.383Z
        '401':
          description: 'Unauthenticated'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Response-Object'
                - type: object
                  example:
                    success:  false
                    msg:  Unauthenticated Error Message
        '403':
          description: 'Forbidden'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Response-Object'
                - type: object
                  example:
                    success:  false
                    msg:  Forbidden Error Message
        '500':
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Response-Object'
                - type: object
                  example:
                    success:  false
                    msg:  Internal Server Error
      deprecated: false
  /watchlist:
    get:
      security:
        - cookieAuth: []
      tags:
      - Watchlist
      summary: Get User Watchlist
      operationId: GetUserWatchlist
      parameters: []
      responses:
        '200':
          description: 'Success Response'
          headers: {}
          content:
            application/json:
              schema:
                  properties:
                    success:
                      type: boolean
                    watchlists:
                      type: object
                      properties:
                        _id:
                          type: string
                        user:
                          type: string
                        movieItems:
                          type: array
                          items:
                            properties:
                              movieId:
                                type: object
                                properties:
                                  _id:
                                    type: string
                                  title:
                                    type: string
                                  yearReleased:
                                    type: integer
                                  image:
                                    type: string
                              hasWatched:
                                type: boolean
                  example:
                    success:  true
                    watchlists:
                      _id:  6426c040ee802778af273928
                      user:  643433e96ffa5f5c7ae41e8f
                      movieItems:
                        - movieId:
                            _id:  643433e96ffa5f5c7ae41e0c
                            title:  2001 A Space Odyssey
                            yearReleased: 1968
                            image:  /images/2001_space_odyssey.jpg
                          hasWatched: false
        '401':
          description: 'Unauthenticated'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Response-Object'
                - type: object
                  example:
                    success:  false
                    msg:  Unauthenticated Error Message
        '500':
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Response-Object'
                - type: object
                  example:
                    success:  false
                    msg:  Internal Server Error
      deprecated: false
  /watchlist/all:
    get:
      security:
        - cookieAuth: []
      tags:
      - Watchlist
      summary: Get All Watchlist
      operationId: GetAllWatchlist
      parameters: []
      responses:
        '200':
          description: 'Success Response'
          headers: {}
          content:
            application/json:
              schema:
                  properties:
                    success:
                      type: boolean
                    watchlists:
                      type: array
                      items:
                        properties:
                          _id:
                            type: string
                          user:
                            type: string
                          movieItems:
                            type: array
                            items:
                              properties:
                                movieId:
                                  type: string
                                hasWatched:
                                  type: boolean
                                _id:
                                  type: string
                  example:
                    success:  true
                    watchlists:
                      - _id:  6426c040ee802778af273928
                        user:  643433e96ffa5f5c7ae41e8f
                        movieItems:
                          - movieId:
                            _id:  643433e96ffa5f5c7ae41e0c
                            hasWatched: false
        '401':
          description: 'Unauthenticated'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Response-Object'
                - type: object
                  example:
                    success:  false
                    msg:  Unauthenticated Error Message
        '403':
          description: 'Forbidden'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Response-Object'
                - type: object
                  example:
                    success:  false
                    msg:  Forbidden Error Message
        '500':
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Response-Object'
                - type: object
                  example:
                    success:  false
                    msg:  Internal Server Error
      deprecated: false
  /watchlist/movie/{movieId}:
    parameters:
      - in: path
        name: movieId
        schema:
          type: string
        required: true
        description:  The Movie ID
    get:
      security:
        - cookieAuth: []
      tags:
      - Watchlist
      summary: Check Movie in Watchlist
      operationId: CheckMovieinWatchlist
      parameters: []
      responses:
        '200':
          description: 'Success Response'
          headers: {}
          content:
            application/json:
              schema:
                  properties:
                    success:
                      type: boolean
                    isInWatchlist:
                      type: string
                  example:
                    success:  true
                    isInWatchlist:  643433e96ffa5f5c7ae41e1a
        '401':
          description: 'Unauthenticated'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Response-Object'
                - type: object
                  example:
                    success:  false
                    msg:  Unauthenticated Error Message
        '500':
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Response-Object'
                - type: object
                  example:
                    success:  false
                    msg:  Internal Server Error
      deprecated: false
  /watchlist/{id}:
    parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
        description:  The Movie ID
    put:
      security:
        - cookieAuth: []
      tags:
      - Watchlist
      summary: Add to watchlist
      operationId: Addtowatchlist
      parameters: []
      responses:
        '201':
          description: 'Success Response'
          headers: {}
          content:
            application/json:
              schema:
                  properties:
                    success:
                      type: boolean
                    msg:
                      type: string
                  example:
                    success:  true
                    msg:  Movie added to watchlist
        '401':
          description: 'Unauthenticated'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Response-Object'
                - type: object
                  example:
                    success:  false
                    msg:  Unauthenticated Error Message
        '404':
          description: 'Not Found'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Response-Object'
                - type: object
                  example:
                    success:  false
                    msg:  Not Found Error Message
        '500':
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Response-Object'
                - type: object
                  example:
                    success:  false
                    msg:  Internal Server Error
      deprecated: false
    delete:
      security:
        - cookieAuth: []
      tags:
      - Watchlist
      summary: Remove from Watchlist
      operationId: RemovefromWatchlist
      parameters: []
      responses:
        '200':
          description: 'Success Response'
          headers: {}
          content:
            application/json:
              schema:
                  properties:
                    success:
                      type: boolean
                    msg:
                      type: string
                  example:
                    success:  true
                    msg:  Movie removed from watchlist
        '400':
          description: 'Bad Request'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Response-Object'
                - type: object
                  example:
                    success:  false
                    msg:  Bad Request Error Message
        '401':
          description: 'Unauthenticated'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Response-Object'
                - type: object
                  example:
                    success:  false
                    msg:  Unauthenticated Error Message
        '500':
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Response-Object'
                - type: object
                  example:
                    success:  false
                    msg:  Internal Server Error
      deprecated: false
  /watchlist/hasWatched/{id}:
    parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
        description:  The Movie ID
    put:
      security:
        - cookieAuth: []
      tags:
      - Watchlist
      summary: Change Watch Status
      operationId: ChangeWatchStatus
      parameters: []
      responses:
        '200':
          description: 'Success Response'
          headers: {}
          content:
            application/json:
              schema:
                  properties:
                    success:
                      type: boolean
                    msg:
                      type: string
                  example:
                    success:  true
                    msg:  Movie item status has been updated
        '400':
          description: 'Bad Request'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Response-Object'
                - type: object
                  example:
                    success:  false
                    msg:  Bad Request Error Message
        '401':
          description: 'Unauthenticated'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Response-Object'
                - type: object
                  example:
                    success:  false
                    msg:  Unauthenticated Error Message
        '500':
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Response-Object'
                - type: object
                  example:
                    success:  false
                    msg:  Internal Server Error
      deprecated: false
  /actors:
    get:
      security:
        - cookieAuth: []
      tags:
      - Actor
      summary: Get All Actors
      operationId: GetAllActors
      parameters: []
      responses:
        '200':
          description: 'Success Response'
          headers: {}
          content:
            application/json:
              schema:
                  properties:
                    success:
                      type: boolean
                    actors:
                      type: array
                      items:
                        properties:
                          _id:
                            type: string
                          fullName:
                            type: string
                          totalMovieRoles:
                            type: integer
                  example:
                    success:  true
                    actors:
                      - _id:  643433e96ffa5f5c7ae41ebb
                        fullName: Sam Worthington
                        totalMovieRoles:  3
        '401':
          description: 'Unauthenticated'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Response-Object'
                - type: object
                  example:
                    success:  false
                    msg:  Unauthenticated Error Message
        '500':
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Response-Object'
                - type: object
                  example:
                    success:  false
                    msg:  Internal Server Error
      deprecated: false
    post:
      security:
        - cookieAuth: []
      tags:
      - Actor
      summary: Add Actor
      operationId: AddActor
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/AddActorRequest'
              - example:
                  fullName: Brad Pitt
                  country: USA
                  movieRoles:
                  - movieId: 6426c03fee802778af27386e
                    characterName: Character One
                  - movieId: 6426c03fee802778af27386c
                    characterName: Character Two
            example:
              fullName: Brad Pitt
              country: USA
              movieRoles:
              - movieId: 6426c03fee802778af27386e
                characterName: Character One
              - movieId: 6426c03fee802778af27386c
                characterName: Character Two
        required: true
      responses:
        '200':
          description: 'Success Response'
          headers: {}
          content:
            application/json:
              schema:
                  properties:
                    success:
                      type: boolean
                    msg:
                      type: string
                  example:
                    success:  true
                    msg:  Actor created
        '400':
          description: 'Bad Request'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Response-Object'
                - type: object
                  example:
                    success:  false
                    msg:  Bad Request Error Message
        '401':
          description: 'Unauthenticated'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Response-Object'
                - type: object
                  example:
                    success:  false
                    msg:  Unauthenticated Error Message
        '403':
          description: 'Forbidden'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Response-Object'
                - type: object
                  example:
                    success:  false
                    msg:  Forbidden Error Message
        '500':
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Response-Object'
                - type: object
                  example:
                    success:  false
                    msg:  Internal Server Error
      deprecated: false
  /actors/{id}:
    parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
        description:  The Actor ID
    get:
      security:
        - cookieAuth: []
      tags:
      - Actor
      summary: Get Actor By ID
      operationId: GetActorByID
      parameters: []
      responses:
        '200':
          description: 'Success Response'
          headers: {}
          content:
            application/json:
              schema:
                  properties:
                    success:
                      type: boolean
                    actors:
                      type: object
                      properties:
                        _id:
                          type: string
                        fullName:
                          type: string
                        country:
                          type: string
                        movieRoles:
                          type: array
                          items:
                            properties:
                              movieId:
                                type: object
                                properties:
                                  _id:
                                    type: integer
                                  title:
                                    type: string
                              characterName:
                                type: string
                              _id:
                                type: string
                  example:
                    success:  true
                    actors:
                      _id:  643433e96ffa5f5c7ae41ebb
                      fullName: Sam Worthington
                      country:  United Kingdom
                      movieRoles:
                        - movieId:
                            _id:  643433e96ffa5f5c7ae41dc7
                            title:  Avatar
                          characterName:  Sample1
                          _id:  643433e96ffa5f5c7ae41ebc
        '401':
          description: 'Unauthenticated'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Response-Object'
                - type: object
                  example:
                    success:  false
                    msg:  Unauthenticated Error Message
        '404':
          description: 'Not Found'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Response-Object'
                - type: object
                  example:
                    success:  false
                    msg:  Not Found Error Message
        '500':
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Response-Object'
                - type: object
                  example:
                    success:  false
                    msg:  Internal Server Error
      deprecated: false
    delete:
      security:
        - cookieAuth: []
      tags:
      - Actor
      summary: Delete Actor
      operationId: DeleteActor
      parameters: []
      responses:
        '200':
          description: 'Success Response'
          headers: {}
          content:
            application/json:
              schema:
                  properties:
                    success:
                      type: boolean
                    msg:
                      type: string
                  example:
                    success:  true
                    msg:  Actor deleted
        '401':
          description: 'Unauthenticated'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Response-Object'
                - type: object
                  example:
                    success:  false
                    msg:  Unauthenticated Error Message
        '403':
          description: 'Forbidden'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Response-Object'
                - type: object
                  example:
                    success:  false
                    msg:  Forbidden Error Message
        '404':
          description: 'Not Found'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Response-Object'
                - type: object
                  example:
                    success:  false
                    msg:  Not Found Error Message
        '500':
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Response-Object'
                - type: object
                  example:
                    success:  false
                    msg:  Internal Server Error
      deprecated: false
    put:
      security:
        - cookieAuth: []
      tags:
      - Actor
      summary: Update Actor
      operationId: UpdateActor
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/UpdateActorRequest'
              - example:
                  fullName: New Brad Pit23
                  country: United States
            example:
              fullName: New Brad Pit23
              country: United States
        required: true
      responses:
        '200':
          description: 'Success Response'
          headers: {}
          content:
            application/json:
              schema:
                  properties:
                    success:
                      type: boolean
                    msg:
                      type: string
                  example:
                    success:  true
                    msg:  Actor updated
        '400':
          description: 'Bad Request'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Response-Object'
                - type: object
                  example:
                    success:  false
                    msg:  Bad Request Error Message
        '401':
          description: 'Unauthenticated'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Response-Object'
                - type: object
                  example:
                    success:  false
                    msg:  Unauthenticated Error Message
        '403':
          description: 'Forbidden'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Response-Object'
                - type: object
                  example:
                    success:  false
                    msg:  Forbidden Error Message
        '404':
          description: 'Not Found'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Response-Object'
                - type: object
                  example:
                    success:  false
                    msg:  Not Found Error Message
        '500':
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Response-Object'
                - type: object
                  example:
                    success:  false
                    msg:  Internal Server Error
      deprecated: false
  /actors/addRole/{id}:
    parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
        description:  The Actor ID
    put:
      security:
        - cookieAuth: []
      tags:
      - Actor
      summary: Add Movie Role
      operationId: AddMovieRole
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/AddMovieRoleRequest'
              - example:
                  movieId: 6426c03fee802778af27386e
                  characterName: Character One
            example:
              movieId: 6426c03fee802778af27386e
              characterName: Character One
        required: true
      responses:
        '200':
          description: 'Success Response'
          headers: {}
          content:
            application/json:
              schema:
                  properties:
                    success:
                      type: boolean
                    msg:
                      type: string
                  example:
                    success:  true
                    msg:  Movie Role added to actor
        '400':
          description: 'Bad Request'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Response-Object'
                - type: object
                  example:
                    success:  false
                    msg:  Bad Request Error Message
        '401':
          description: 'Unauthenticated'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Response-Object'
                - type: object
                  example:
                    success:  false
                    msg:  Unauthenticated Error Message
        '403':
          description: 'Forbidden'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Response-Object'
                - type: object
                  example:
                    success:  false
                    msg:  Forbidden Error Message
        '404':
          description: 'Not Found'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Response-Object'
                - type: object
                  example:
                    success:  false
                    msg:  Not Found Error Message
        '500':
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Response-Object'
                - type: object
                  example:
                    success:  false
                    msg:  Internal Server Error
      deprecated: false
  /actors/removeRole/{id}/movie/{movieId}:
    parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
        description:  The Actor ID
      - in: path
        name: movieId
        schema:
          type: string
        required: true
        description:  The Movie ID
    delete:
      security:
        - cookieAuth: []
      tags:
      - Actor
      summary: Remove Movie Role
      operationId: RemoveMovieRole
      parameters: []
      responses:
        '200':
          description: 'Success Response'
          headers: {}
          content:
            application/json:
              schema:
                  properties:
                    success:
                      type: boolean
                    msg:
                      type: string
                  example:
                    success:  true
                    msg:  Movie Role removed from actor
        '400':
          description: 'Bad Request'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Response-Object'
                - type: object
                  example:
                    success:  false
                    msg:  Bad Request Error Message
        '401':
          description: 'Unauthenticated'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Response-Object'
                - type: object
                  example:
                    success:  false
                    msg:  Unauthenticated Error Message
        '403':
          description: 'Forbidden'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Response-Object'
                - type: object
                  example:
                    success:  false
                    msg:  Forbidden Error Message
        '404':
          description: 'Not Found'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Response-Object'
                - type: object
                  example:
                    success:  false
                    msg:  Not Found Error Message
        '500':
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Response-Object'
                - type: object
                  example:
                    success:  false
                    msg:  Internal Server Error
      deprecated: false
components:
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: apimeToken
  schemas:
    Login-UserRequest:
      title: Login-UserRequest
      required:
      - username
      - password
      type: object
      properties:
        username:
          type: string
        password:
          type: string
      example:
        username: Admin
        password: testpass
    RegisterRequest:
      title: RegisterRequest
      required:
      - username
      - password
      type: object
      properties:
        username:
          type: string
        password:
          type: string
      example:
        username: DemoUser1
        password: testpass
    AddMovieRequest:
      title: AddMovieRequest
      required:
      - title
      - director
      - category
      - image
      - description
      - yearReleased
      type: object
      properties:
        title:
          type: string
        director:
          type: string
        category:
          type: array
          items:
            type: string
          description: ''
        image:
          type: string
        description:
          type: string
        yearReleased:
          type: integer
          format: int32
      example:
        title: Hello
        director: blabla
        category:
        - Sci-fi
        - Fantasy
        - Action
        - Horror
        image: /images/default.jpg
        description: test description
        yearReleased: 2024
    UpdateMovieRequest:
      title: UpdateMovieRequest
      required:
      - title
      - yearReleased
      - director
      - category
      - description
      type: object
      properties:
        title:
          type: string
        yearReleased:
          type: integer
          format: int32
        director:
          type: string
        category:
          type: array
          items:
            type: string
          description: ''
        description:
          type: string
      example:
        title: Avatar1235
        yearReleased: 2009
        director: James Cameron
        category:
        - Sci-fi
        description: sample description
    AddreviewRequest:
      title: AddreviewRequest
      required:
      - reviewComment
      - reviewRating
      - movie
      type: object
      properties:
        reviewComment:
          type: string
        reviewRating:
          type: integer
          format: int32
        movie:
          type: string
      example:
        reviewComment: Demo User Review
        reviewRating: 5
        movie: 6421189d30fb8cd0f1d6423b
    UpdateReviewRequest:
      title: UpdateReviewRequest
      required:
      - reviewComment
      - reviewRating
      type: object
      properties:
        reviewComment:
          type: string
        reviewRating:
          type: integer
          format: int32
      example:
        reviewComment: Demo updated review
        reviewRating: 3
    AddActorRequest:
      title: AddActorRequest
      required:
      - fullName
      - country
      - movieRoles
      type: object
      properties:
        fullName:
          type: string
        country:
          type: string
        movieRoles:
          type: array
          items:
            $ref: '#/components/schemas/MovieRole'
          description: ''
      example:
        fullName: Brad Pitt
        country: USA
        movieRoles:
        - movieId: 6426c03fee802778af27386e
          characterName: Character One
        - movieId: 6426c03fee802778af27386c
          characterName: Character Two
    MovieRole:
      title: MovieRole
      required:
      - movieId
      - characterName
      type: object
      properties:
        movieId:
          type: string
        characterName:
          type: string
      example:
        movieId: 6426c03fee802778af27386e
        characterName: Character One
    UpdateActorRequest:
      title: UpdateActorRequest
      required:
      - fullName
      - country
      type: object
      properties:
        fullName:
          type: string
        country:
          type: string
      example:
        fullName: New Brad Pit23
        country: United States
    AddMovieRoleRequest:
      title: AddMovieRoleRequest
      required:
      - movieId
      - characterName
      type: object
      properties:
        movieId:
          type: string
        characterName:
          type: string
      example:
        movieId: 6426c03fee802778af27386e
        characterName: Character One
    Response-Object:
      type: object
      properties:
        success:
          type: boolean
        msg:
          type: string
      example:
        success:  true
        msg:  Success message
tags:
- name: Auth
  description: ''
- name: Movie
  description: ''
- name: Review
  description: ''
- name: Watchlist
  description: ''
- name: Actor
  description: ''